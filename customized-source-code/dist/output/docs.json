{
  "openapi": "3.0.3",
  "info": {
    "title": "Road2Crypto API Documentation",
    "description": "Github repository of Road2Crypto API Documentation: [https://github.com/Road2Crypto/api-docs](https://github.com/Road2Crypto/api-docs)",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.road2crypto.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Endpoints for authentication",
      "externalDocs": {
        "description": "Github Code",
        "url": "https://github.com/Road2Crypto/backend"
      }
    }
  ],
  "paths": {
    "/internal/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Add User",
        "description": "Add User using Signup",
        "operationId": "signup",
        "parameters": [
          {
            "name": "x-client-token",
            "in": "header",
            "description": "Client Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input fields"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 409
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/internal/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authorize User",
        "description": "Authorize User using login",
        "operationId": "login",
        "parameters": [
          {
            "name": "x-client-token",
            "in": "header",
            "description": "Client Authorization Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User authenticated successfully"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "<jwt-token>"
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "<jwt-token>"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing any input field (OR) Invalid email or password below 6 digits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input fields (OR) Invalid input"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User does not exist or wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid credentials"
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "An error occurred during authentication. Please try again."
                    },
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        },
        "xml": {
          "name": "user"
        }
      }
    }
  }
}